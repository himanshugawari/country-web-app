{"version":3,"sources":["resources/data.js","components/Title.js","redux/countryTypes.js","redux/countryActions.js","components/CustomNav.js","components/CustomDropDown.js","components/CountryDetails.js","components/AddCountry.js","components/DeleteCountry.js","App.js","redux/countryReducer.js","redux/store.js","index.js"],"names":["data","name","continent","flag","rank","Title","title","React","memo","LOAD_COUNTRY_DATA","LOAD_CONTINENT_DATA","ADD_COUNTRY_DATA","DELETE_COUNTRY_DATA","SELECTED_COUNTRY","SELECTED_TYPE","selectedCountry","country","type","payload","selectedType","styles","cursor","CustomNav","dispatch","useDispatch","selected","useSelector","state","onTypeSelect","expand","light","href","className","navbar","onClick","style","CustomDropDown","countries","for","width","textAlign","id","onChange","e","value","target","find","item","Number","map","display","flexDirection","CountryDetails","border","src","alt","maxHeight","maxWidth","AddCountry","continentsList","continents","useState","setName","setFlag","flagImage","setFlagImage","setContinent","setRank","check","setCheck","onChangeData","length","prevState","files","localImageUrl","window","URL","createObjectURL","some","v","includes","size","toFixed","bsSize","color","fontSize","key","onKeyDown","preventDefault","accept","colSpan","outline","disabled","Object","values","every","addCountry","DeleteCountry","App","countrySelected","selectedtype","useEffect","continentsArray","uniqueContinents","Set","finalContinents","Array","from","loadContinentData","undefined","initialData","store","createStore","action","newCountry","filter","sameAsSelectedCountry","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ba2cce2.chunk.js","sourcesContent":["export const data = {\r\n  countries: [\r\n    {\r\n      name: 'Australia',\r\n      continent: 'Oceania',\r\n      flag: 'images/australia.png',\r\n      rank: 4,\r\n    },\r\n    {\r\n      name: 'England',\r\n      continent: 'Europe',\r\n      flag: 'images/england.png',\r\n      rank: 5,\r\n    },\r\n    {\r\n      name: 'Namibia',\r\n      continent: 'Africa',\r\n      flag: 'images/namibia.png',\r\n      rank: 8,\r\n    },\r\n    {\r\n      name: 'New Zealand',\r\n      continent: 'Oceania',\r\n      flag: 'images/newzealand.png',\r\n      rank: 3,\r\n    },\r\n    {\r\n      name: 'Pakistan',\r\n      continent: 'Asia',\r\n      flag: 'images/pakistan.png',\r\n      rank: 6,\r\n    },\r\n    {\r\n      name: 'Zimbabwe',\r\n      continent: 'Africa',\r\n      flag: 'images/zimbabwe.png',\r\n      rank: 7,\r\n    },\r\n    {\r\n      name: 'South Africa',\r\n      continent: 'Africa',\r\n      flag: 'images/southafrica.png',\r\n      rank: 2,\r\n    },\r\n    {\r\n      name: 'India',\r\n      continent: 'Asia',\r\n      flag: 'images/india.png',\r\n      rank: 1,\r\n    },\r\n  ],\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Title = ({ title }) => {\r\n  return <h2>{title}</h2>;\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default React.memo(Title);\r\n","export const LOAD_COUNTRY_DATA = 'LOAD_COUNTRY_DATA';\r\nexport const LOAD_CONTINENT_DATA = 'LOAD_CONTINENT_DATA';\r\n\r\nexport const ADD_COUNTRY_DATA = 'ADD_COUNTRY_DATA';\r\nexport const DELETE_COUNTRY_DATA = 'DELETE_COUNTRY_DATA';\r\n\r\nexport const SELECTED_COUNTRY = 'SELECTED_COUNTRY';\r\nexport const SELECTED_TYPE = 'SELECTED_TYPE';\r\n","import {\r\n  LOAD_COUNTRY_DATA,\r\n  LOAD_CONTINENT_DATA,\r\n  SELECTED_COUNTRY,\r\n  SELECTED_TYPE,\r\n  ADD_COUNTRY_DATA,\r\n  DELETE_COUNTRY_DATA,\r\n} from './countryTypes';\r\n\r\nexport const loadCountryData = (countries) => {\r\n  return {\r\n    type: LOAD_COUNTRY_DATA,\r\n    payload: {\r\n      countries: countries,\r\n    },\r\n  };\r\n};\r\n\r\nexport const loadContinentData = (continents) => {\r\n  let continentsArray = continents.map((item) => item.continent);\r\n  let uniqueContinents = new Set(continentsArray);\r\n  let finalContinents = Array.from(uniqueContinents);\r\n  return {\r\n    type: LOAD_CONTINENT_DATA,\r\n    payload: {\r\n      continents: finalContinents,\r\n    },\r\n  };\r\n};\r\n\r\nexport const selectedCountry = (country) => {\r\n  return {\r\n    type: SELECTED_COUNTRY,\r\n    payload: {\r\n      selectedCountry: country,\r\n    },\r\n  };\r\n};\r\n\r\nexport const selectedType = (type) => {\r\n  return {\r\n    type: SELECTED_TYPE,\r\n    payload: {\r\n      selectedType: type,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addCountry = (country) => {\r\n  return {\r\n    type: ADD_COUNTRY_DATA,\r\n    payload: {\r\n      country: country,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteCountry = (rank) => {\r\n  return {\r\n    type: DELETE_COUNTRY_DATA,\r\n    payload: {\r\n      rank: rank,\r\n    },\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from 'reactstrap';\r\nimport Title from './Title';\r\nimport { selectedType } from '../redux/countryActions';\r\n\r\nconst styles = {\r\n  onHover: { cursor: 'pointer' },\r\n};\r\n\r\nconst CustomNav = () => {\r\n  const dispatch = useDispatch();\r\n  const selected = useSelector((state) => state.selectedType);\r\n\r\n  const onTypeSelect = (type) => {\r\n    if (selected !== type) {\r\n      dispatch(selectedType(type));\r\n    } else {\r\n      dispatch(selectedType(''));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar expand='md' light>\r\n      <NavbarBrand href='/'>\r\n        <Title title='COUNTRY' />\r\n      </NavbarBrand>\r\n      <Nav className='me-auto' navbar>\r\n        <NavItem>\r\n          <NavLink\r\n            onClick={() => onTypeSelect('add')}\r\n            style={{ ...styles.onHover }}\r\n            className={selected === 'add' ? 'selected-type' : ''}\r\n          >\r\n            ADD\r\n          </NavLink>\r\n        </NavItem>\r\n        {/* <NavItem>\r\n          <NavLink\r\n            onClick={() => onTypeSelect('update')}\r\n            style={{ ...styles.onHover }}\r\n            className={selected === 'update' ? 'selected-type' : ''}\r\n          >\r\n            UPDATE\r\n          </NavLink>\r\n        </NavItem> */}\r\n        <NavItem>\r\n          <NavLink\r\n            onClick={() => onTypeSelect('delete')}\r\n            style={{ ...styles.onHover }}\r\n            className={selected === 'delete' ? 'selected-type' : ''}\r\n          >\r\n            DELETE\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <NavbarText>Himanshu Gawari</NavbarText>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default CustomNav;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { selectedCountry } from '../redux/countryActions';\r\n\r\nconst CustomDropDown = () => {\r\n  const countries = useSelector((state) => state.countries);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCountryChange = (e) => {\r\n    let value = e.target.value;\r\n    if (value !== '') {\r\n      let country = countries.find((item) => item.rank === Number(value));\r\n      dispatch(selectedCountry(country));\r\n    } else {\r\n      dispatch(selectedCountry({}));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <Label for='country' style={{ width: '100%', textAlign: 'center' }}>\r\n          Select Country\r\n        </Label>\r\n        <Input\r\n          id='country'\r\n          name='select'\r\n          type='select'\r\n          onChange={handleCountryChange}\r\n        >\r\n          <option value=''>--select--</option>\r\n          {countries &&\r\n            countries.map((item) => (\r\n              <option key={item.rank} value={item.rank}>\r\n                {item.name}\r\n              </option>\r\n            ))}\r\n        </Input>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CustomDropDown;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Table } from 'reactstrap';\r\n\r\nconst styles = {\r\n  alignVertical: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nconst CountryDetails = () => {\r\n  const country = useSelector((state) => state.selectedCountry);\r\n  return (\r\n    <Table>\r\n      <tbody>\r\n        <tr>\r\n          <td style={{ border: 'none' }} className='center-section'>\r\n            <img\r\n              src={country.flag}\r\n              alt={country.name}\r\n              style={{\r\n                maxHeight: '75px',\r\n                maxWidth: '125px',\r\n              }}\r\n            />\r\n          </td>\r\n          <td style={{ border: 'none' }}>\r\n            <div style={{ ...styles.alignVertical }}>\r\n              <div>COUNTRY</div>\r\n              <h2>{country.name}</h2>\r\n            </div>\r\n          </td>\r\n          <td style={{ border: 'none' }}>\r\n            <div style={{ ...styles.alignVertical }}>\r\n              <div>CONTINENT</div>\r\n              <h2>{country.continent}</h2>\r\n            </div>\r\n          </td>\r\n          <td style={{ border: 'none' }}>\r\n            <div style={{ ...styles.alignVertical }}>\r\n              <div>RANK</div>\r\n              <h2>{country.rank}</h2>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default CountryDetails;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Table, Label, Input, FormText, Button } from 'reactstrap';\r\nimport { addCountry, selectedType } from '../redux/countryActions';\r\n\r\nconst AddCountry = () => {\r\n  const continentsList = useSelector((state) => state.continents);\r\n  const countries = useSelector((state) => state.countries);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [flag, setFlag] = useState('');\r\n  const [flagImage, setFlagImage] = useState(null);\r\n  const [continent, setContinent] = useState('');\r\n  const [rank, setRank] = useState('');\r\n\r\n  const [check, setCheck] = useState({\r\n    name: false,\r\n    flag: false,\r\n    rank: false,\r\n    continent: false,\r\n  });\r\n\r\n  const onChangeData = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    if (name === 'name') {\r\n      setName(value);\r\n      if (value.length >= 3 && value.length <= 20)\r\n        setCheck((prevState) => ({ ...prevState, name: false }));\r\n      else setCheck((prevState) => ({ ...prevState, name: true }));\r\n    }\r\n    if (name === 'continent') {\r\n      setContinent(value);\r\n      if (value === '')\r\n        setCheck((prevState) => ({ ...prevState, continent: true }));\r\n      else setCheck((prevState) => ({ ...prevState, continent: false }));\r\n    }\r\n    if (name === 'rank') {\r\n      setRank(value);\r\n      if (countries.find((item) => item.rank === Number(value)))\r\n        setCheck((prevState) => ({ ...prevState, rank: true }));\r\n      else setCheck((prevState) => ({ ...prevState, rank: false }));\r\n    }\r\n    if (name === 'flag') {\r\n      if (e.target.files.length > 0) {\r\n        const { files } = e.target;\r\n        const localImageUrl = window.URL.createObjectURL(files[0]);\r\n        setFlagImage(localImageUrl);\r\n        setFlag(value);\r\n        if (\r\n          ['.jpg', '.jpeg', '.png'].some((v) => files[0].name.includes(v)) &&\r\n          (files[0].size / 1024 / 1024).toFixed(4) < 4\r\n        ) {\r\n          setCheck((prevState) => ({ ...prevState, flag: false }));\r\n        } else {\r\n          setCheck((prevState) => ({ ...prevState, flag: true }));\r\n        }\r\n      } else {\r\n        setFlagImage(null);\r\n        setFlag('');\r\n        setCheck((prevState) => ({ ...prevState, flag: true }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCountrySubmit = () => {\r\n    let country = {\r\n      name: name,\r\n      flag: flagImage,\r\n      continent: continent,\r\n      rank: Number(rank),\r\n    };\r\n    dispatch(addCountry(country));\r\n    dispatch(selectedType(''));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='center-section'>ADD COUNTRY</h3>\r\n      <Table>\r\n        <tbody>\r\n          <tr>\r\n            <td style={{ border: 'none' }} className='center-section'>\r\n              <Label for='name' style={{ width: '100%', textAlign: 'center' }}>\r\n                Country\r\n              </Label>\r\n            </td>\r\n            <td style={{ border: 'none' }}>\r\n              <Input\r\n                bsSize='sm'\r\n                id='name'\r\n                name='name'\r\n                type='text'\r\n                value={name}\r\n                onChange={onChangeData}\r\n              />\r\n              {check.name && (\r\n                <FormText color='danger' style={{ fontSize: '1rem' }}>\r\n                  Min. 3 to Max. 20 characters allowed.\r\n                </FormText>\r\n              )}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ border: 'none' }} className='center-section'>\r\n              <Label\r\n                for='continent'\r\n                style={{ width: '100%', textAlign: 'center' }}\r\n              >\r\n                Continent\r\n              </Label>\r\n            </td>\r\n            <td style={{ border: 'none' }}>\r\n              <Input\r\n                bsSize='sm'\r\n                id='continent'\r\n                name='continent'\r\n                type='select'\r\n                value={continent}\r\n                onChange={onChangeData}\r\n              >\r\n                <option value=''>--select--</option>\r\n                {continentsList &&\r\n                  continentsList.map((item, key) => (\r\n                    <option key={key} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  ))}\r\n              </Input>\r\n              {check.continent && (\r\n                <FormText color='danger' style={{ fontSize: '1rem' }}>\r\n                  Mandatory\r\n                </FormText>\r\n              )}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ border: 'none' }} className='center-section'>\r\n              <Label for='rank' style={{ width: '100%', textAlign: 'center' }}>\r\n                Rank\r\n              </Label>\r\n            </td>\r\n            <td style={{ border: 'none' }}>\r\n              <Input\r\n                bsSize='sm'\r\n                id='rank'\r\n                name='rank'\r\n                type='number'\r\n                onKeyDown={(e) =>\r\n                  ['e', 'E', '+', '-', '.'].includes(e.key) &&\r\n                  e.preventDefault()\r\n                }\r\n                value={rank}\r\n                onChange={onChangeData}\r\n              />\r\n              {check.rank && (\r\n                <FormText color='danger' style={{ fontSize: '1rem' }}>\r\n                  Rank already present.\r\n                </FormText>\r\n              )}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td style={{ border: 'none' }} className='center-section'>\r\n              <Label for='flag' style={{ width: '100%', textAlign: 'center' }}>\r\n                Flag\r\n              </Label>\r\n            </td>\r\n            <td style={{ border: 'none' }}>\r\n              <Input\r\n                bsSize='sm'\r\n                id='flag'\r\n                name='flag'\r\n                type='file'\r\n                accept='.jpg,.jpeg,.png'\r\n                value={flag}\r\n                onChange={onChangeData}\r\n              />\r\n              {check.flag && (\r\n                <FormText color='danger' style={{ fontSize: '1rem' }}>\r\n                  Only allowed JPG/JPEG/PNG within 4MB.\r\n                </FormText>\r\n              )}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td></td>\r\n            <td colSpan='2'>\r\n              <Button\r\n                color='primary'\r\n                outline\r\n                disabled={!Object.values(check).every((item) => item === false)}\r\n                style={{ display: 'block', width: '100%' }}\r\n                onClick={handleCountrySubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n              {true && (\r\n                <FormText color='danger' style={{ fontSize: '1rem' }}>\r\n                  * All fields mandatory.\r\n                </FormText>\r\n              )}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCountry;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Label, Input, FormGroup } from 'reactstrap';\r\nimport { deleteCountry, selectedType } from '../redux/countryActions';\r\n\r\nconst DeleteCountry = () => {\r\n  const countries = useSelector((state) => state.countries);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <h3 className='center-section'>DELETE COUNTRY</h3>\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for='country' style={{ width: '100%', textAlign: 'center' }}>\r\n            Select Country To Delete\r\n          </Label>\r\n          <Input\r\n            id='country'\r\n            name='select'\r\n            type='select'\r\n            onChange={(e) => {\r\n              dispatch(deleteCountry(Number(e.target.value)));\r\n              dispatch(selectedType(''));\r\n            }}\r\n          >\r\n            <option value=''>--select--</option>\r\n            {countries &&\r\n              countries.map((item) => (\r\n                <option key={item.rank} value={item.rank}>\r\n                  {item.name}\r\n                </option>\r\n              ))}\r\n          </Input>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteCountry;\r\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\nimport './App.css';\nimport { data } from './resources/data';\n\nimport CustomNav from './components/CustomNav';\nimport CustomDropDown from './components/CustomDropDown';\nimport { loadCountryData, loadContinentData } from './redux/countryActions';\nimport CountryDetails from './components/CountryDetails';\nimport AddCountry from './components/AddCountry';\nimport DeleteCountry from './components/DeleteCountry';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const countrySelected = useSelector((state) => state.selectedCountry);\n  const selectedtype = useSelector((state) => state.selectedType);\n\n  useEffect(() => {\n    dispatch(loadCountryData(data.countries));\n    dispatch(loadContinentData(data.countries));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container className='container'>\n      <Row>\n        <Col>\n          <CustomNav />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col className='center-section'>\n          <CustomDropDown />\n        </Col>\n      </Row>\n\n      {countrySelected &&\n        countrySelected.name !== undefined &&\n        countrySelected.name !== null && (\n          <Row>\n            <Col className='center-section'>\n              <CountryDetails />\n            </Col>\n          </Row>\n        )}\n\n      {selectedtype && selectedtype === 'add' && (\n        <Row>\n          <Col className='center-section'>\n            <AddCountry />\n          </Col>\n        </Row>\n      )}\n\n      {selectedtype && selectedtype === 'delete' && (\n        <Row>\n          <Col className='center-section'>\n            <DeleteCountry />\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import {\r\n  LOAD_COUNTRY_DATA,\r\n  LOAD_CONTINENT_DATA,\r\n  SELECTED_COUNTRY,\r\n  SELECTED_TYPE,\r\n  ADD_COUNTRY_DATA,\r\n  DELETE_COUNTRY_DATA,\r\n} from './countryTypes';\r\n\r\nconst initialData = {\r\n  countries: [],\r\n  continents: [],\r\n  selectedCountry: {},\r\n  selectedType: '',\r\n};\r\n\r\nexport const countryReducer = (state = initialData, action) => {\r\n  switch (action.type) {\r\n    case LOAD_COUNTRY_DATA:\r\n      return {\r\n        ...state,\r\n        countries: action.payload.countries,\r\n      };\r\n    case LOAD_CONTINENT_DATA:\r\n      return {\r\n        ...state,\r\n        continents: action.payload.continents,\r\n      };\r\n    case SELECTED_COUNTRY:\r\n      return {\r\n        ...state,\r\n        selectedCountry: action.payload.selectedCountry,\r\n      };\r\n    case SELECTED_TYPE:\r\n      return {\r\n        ...state,\r\n        selectedType: action.payload.selectedType,\r\n      };\r\n    case ADD_COUNTRY_DATA:\r\n      let newCountry = action.payload.country;\r\n      return {\r\n        ...state,\r\n        countries: [...state.countries, newCountry],\r\n      };\r\n    case DELETE_COUNTRY_DATA:\r\n      let country = state.countries.filter(\r\n        (item) => item.rank !== action.payload.rank\r\n      );\r\n      let sameAsSelectedCountry =\r\n        state.selectedCountry.rank === action.payload.rank ? true : false;\r\n      return {\r\n        ...state,\r\n        countries: [...country],\r\n        ...(sameAsSelectedCountry && {\r\n          selectedCountry: {},\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { countryReducer } from './countryReducer';\r\n\r\nexport const store = createStore(\r\n  countryReducer,\r\n  composeWithDevTools(applyMiddleware())\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}